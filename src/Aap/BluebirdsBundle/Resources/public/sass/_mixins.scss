@import '_css3.scss';

$base-font-size-px: 12;

/**
 * reset the spacing of an element
 */
@mixin reset-spacing {
    padding: 0;
    margin: 0;
}

/**
 * reset a list element
 */
@mixin reset-list {
    @include reset-spacing;

    list-style: none;
}

/**
 * reset the font size
 */
@mixin reset-font-size() {
    font-size: percentage($base-font-size-px/16);
    line-height: 1em;
}

/**
 * calculate the font size and line height in em's
 *
 * @param number $font_size
 * @param number $line_height, default -1
 */
@mixin font-px-to-em($font-size, $line-height: -1) {
    $font-size-em: $font-size/$base-font-size-px;

    font-size: #{$font-size-em}em;

    @if $line-height > 0 {
        line-height: #{$line-height/$font-size}em;
    }
}

/**
 * @param color $start-color
 * @param color $end-color
 */
@mixin linear-gradient($start-color, $end-color) {
    background: #{$start-color}; /* Old browsers */
    background: -moz-linear-gradient(top, #{$start-color} 0%, #{$end-color} 100%); /* FF3.6+ */
    background: -webkit-linear-gradient(top, #{$start-color} 0%,#{$end-color} 100%); /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(top, #{$start-color} 0%,#{$end-color} 100%); /* Opera 11.10+ */
    background: -ms-linear-gradient(top, #{$start-color} 0%,#{$end-color} 100%); /* IE10+ */
    background: linear-gradient(to bottom, #{$start-color} 0%,#{$end-color} 100%); /* W3C */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$start-color}', endColorstr='#{$end-color}',GradientType=0 ); /* IE6-9 */
}

/**
 * create sprites
 *
 * @param list $sprites
 * @param number $sprite-width
 * @param number $sprite-height
 * @param number $sprite-items-per-row
 * @param number $background-color
 * @param number $image-path
 * @param number $sprite-offset-width, default 0
 * @param number $sprite-offset-height, default 0
 */
@mixin create-sprites($sprites, $sprite-width, $sprite-height, $sprite-items-per-row, $background-color, $image-path, $sprite-offset-width: 0, $sprite-offset-height: 0) {
    .sprite {
        display: inline-block;
        width: #{$sprite-width}px;
        height: #{$sprite-height}px;
        overflow: hidden;
        background-image: url(#{$image-path});
        background-color: $background-color;
        background-repeat: no-repeat;
        background-position: 0 0;
        text-indent: -9999px;

        &:hover {
            @include opacity(0.4);
        }

        @each $sprite in $sprites {
            &.sprite-#{$sprite} {
                $index: index($sprites, $sprite);

                @if $index {
                    $index: $index - 1;
                    $row: floor($index / $sprite-items-per-row);
                    $column: $index - ($row * $sprite-items-per-row);
                    background-position: -#{$column * ($sprite-width + $sprite-offset-width)}px -#{$row * ($sprite-height + $sprite-offset-height)}px;
                } @else {
                    background-position: #{$sprite-width + $sprite-offset-width}px #{$sprite-height + $sprite-offset-height}px;
                }
            }
        }
    }
}